package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCAllPropertiesEquals(C expected, C actual) {
        assertCAutoGeneratedPropertiesEquals(expected, actual);
        assertCAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCAllUpdatablePropertiesEquals(C expected, C actual) {
        assertCUpdatableFieldsEquals(expected, actual);
        assertCUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCAutoGeneratedPropertiesEquals(C expected, C actual) {
        assertThat(expected)
            .as("Verify C auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUpdatableFieldsEquals(C expected, C actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUpdatableRelationshipsEquals(C expected, C actual) {
        // empty method
    }
}
