package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDAllPropertiesEquals(D expected, D actual) {
        assertDAutoGeneratedPropertiesEquals(expected, actual);
        assertDAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDAllUpdatablePropertiesEquals(D expected, D actual) {
        assertDUpdatableFieldsEquals(expected, actual);
        assertDUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDAutoGeneratedPropertiesEquals(D expected, D actual) {
        assertThat(expected)
            .as("Verify D auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDUpdatableFieldsEquals(D expected, D actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDUpdatableRelationshipsEquals(D expected, D actual) {
        // empty method
    }
}
